// Generated by CoffeeScript 1.7.1
(function() {
  var LayoutView, ListView, ListView2, Router,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      this.list2 = __bind(this.list2, this);
      this.list = __bind(this.list, this);
      this.index = __bind(this.index, this);
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.routes = {
      "": "index",
      "list": "list",
      "list2/:id": "list2"
    };

    Router.prototype.index = function() {
      var view;
      view = new ListView;
      return view.render();
    };

    Router.prototype.list = function() {
      var view;
      view = new ListView;
      return view.render();
    };

    Router.prototype.list2 = function(id) {
      var view;
      view = new ListView2;
      return view.render();
    };

    return Router;

  })(Backbone.Router);

  ListView = (function(_super) {
    __extends(ListView, _super);

    function ListView() {
      return ListView.__super__.constructor.apply(this, arguments);
    }

    ListView.prototype.el = 'body .container';

    ListView.prototype.initialize = function() {
      return this.render();
    };

    ListView.prototype.render = function() {
      return this.$el.html('<h1>List</h1>');
    };

    return ListView;

  })(Backbone.View);

  ListView2 = (function(_super) {
    __extends(ListView2, _super);

    function ListView2() {
      return ListView2.__super__.constructor.apply(this, arguments);
    }

    ListView2.prototype.el = 'body .container';

    ListView2.prototype.initialize = function() {
      return this.render();
    };

    ListView2.prototype.render = function() {
      return this.$el.html('<h1>List2</h1>');
    };

    return ListView2;

  })(Backbone.View);

  $(function() {
    new Router;
    return Backbone.history.start();
  });

  LayoutView = (function(_super) {
    var html;

    __extends(LayoutView, _super);

    function LayoutView() {
      return LayoutView.__super__.constructor.apply(this, arguments);
    }

    LayoutView.prototype.el = '#Layout';

    html = "<strong>\n	cup of coffeescript\n</strong>";

    LayoutView.prototype.initialize = function() {
      return this.render();
    };

    LayoutView.prototype.render = function() {
      return this.$el.html(this.html);
    };

    return LayoutView;

  })(Backbone.View);

}).call(this);
