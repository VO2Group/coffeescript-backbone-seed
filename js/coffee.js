// Generated by CoffeeScript 1.7.1
(function() {
  var EditView, Item, List, ListView, LoginView, MainView, User,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Item = (function(_super) {
    __extends(Item, _super);

    function Item() {
      return Item.__super__.constructor.apply(this, arguments);
    }

    Item.prototype.urlRoot = 'items';

    Item.prototype.defaults = {
      name: 'default'
    };

    return Item;

  })(Backbone.Model);

  User = (function(_super) {
    __extends(User, _super);

    function User() {
      return User.__super__.constructor.apply(this, arguments);
    }

    User.prototype.defaults = {
      login: 'anonymous',
      logged: true
    };

    return User;

  })(Backbone.Model);

  List = (function(_super) {
    __extends(List, _super);

    function List() {
      return List.__super__.constructor.apply(this, arguments);
    }

    List.prototype.model = Item;

    List.prototype.url = 'items';

    return List;

  })(Backbone.Collection);

  EditView = (function(_super) {
    __extends(EditView, _super);

    function EditView() {
      this.render = __bind(this.render, this);
      return EditView.__super__.constructor.apply(this, arguments);
    }

    EditView.prototype.el = '#content';

    EditView.prototype.events = {
      'submit #form': 'submit'
    };

    EditView.prototype.template = Templates['edit'];

    EditView.prototype.initialize = function() {
      this.model.on('change', this.render);
      return this.model.fetch();
    };

    EditView.prototype.render = function() {
      this.$el.html(this.template.render(this.model.toJSON()));
      return this;
    };

    EditView.prototype.submit = function(event) {
      this.model.set({
        name: this.$('#name').val()
      });
      this.model.save();
      window.location.replace('/#');
      return false;
    };

    return EditView;

  })(Backbone.View);

  ListView = (function(_super) {
    __extends(ListView, _super);

    function ListView() {
      this.render = __bind(this.render, this);
      return ListView.__super__.constructor.apply(this, arguments);
    }

    ListView.prototype.el = '#content';

    ListView.prototype.events = {
      'click #add': 'add',
      'click .edit': 'edit',
      'click .delete': 'delete'
    };

    ListView.prototype.template = Templates['list'];

    ListView.prototype.initialize = function() {
      this.collection.on('reset add remove', this.render);
      return this.collection.fetch({
        reset: true
      });
    };

    ListView.prototype.render = function() {
      this.$el.html(this.template.render({
        items: this.collection.toJSON()
      }));
      return this;
    };

    ListView.prototype.add = function(event) {
      var item;
      item = new Item;
      item.save(null, {
        success: (function(_this) {
          return function() {
            return _this.collection.add(item.toJSON());
          };
        })(this)
      });
      return false;
    };

    ListView.prototype.edit = function(event) {
      var id;
      id = this.$(event.target).parent().data('item');
      return window.location.replace("/#items/" + id);
    };

    ListView.prototype["delete"] = function(event) {
      var id, item;
      id = this.$(event.target).parent().data('item');
      item = this.collection.get(id);
      return item.destroy();
    };

    return ListView;

  })(Backbone.View);

  LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      this.render = __bind(this.render, this);
      return LoginView.__super__.constructor.apply(this, arguments);
    }

    LoginView.prototype.el = '#content';

    LoginView.prototype.events = {
      'submit #form': 'submit'
    };

    LoginView.prototype.template = Templates['login'];

    LoginView.prototype.render = function() {
      this.$el.html(this.template.render(this.model.toJSON()));
      return this;
    };

    LoginView.prototype.submit = function(event) {
      var credentials;
      credentials = {
        login: this.$('#login').val(),
        pass: this.$('#pass').val()
      };
      $.post('/login', credentials, (function(_this) {
        return function(data) {
          _this.model.set(_.extend({
            logged: true
          }, _.omit(credentials, 'pass')));
          return window.location.replace('/#');
        };
      })(this));
      return false;
    };

    return LoginView;

  })(Backbone.View);

  MainView = (function(_super) {
    __extends(MainView, _super);

    function MainView() {
      this.render = __bind(this.render, this);
      return MainView.__super__.constructor.apply(this, arguments);
    }

    MainView.prototype.el = 'body';

    MainView.prototype.content = null;

    MainView.prototype.events = {
      'click #logout': 'logout'
    };

    MainView.prototype.template = Templates['main'];

    MainView.prototype.initialize = function() {
      this.model.on('change', this.render);
      return this.render();
    };

    MainView.prototype.render = function() {
      this.$el.html(this.template.render(this.model.toJSON()));
      if (this.content) {
        this.content.delegateEvents();
      }
      return this;
    };

    MainView.prototype.setContent = function(content) {
      if (this.content) {
        this.content.undelegateEvents();
      }
      this.content = content;
      return this.content.render();
    };

    MainView.prototype.logout = function(event) {
      $.get('/logout', (function(_this) {
        return function(data) {
          _this.model.set({
            logged: false
          });
          return window.location.replace('/#login');
        };
      })(this));
      return false;
    };

    return MainView;

  })(Backbone.View);

  $(function() {
    var list, mainView, router, user;
    user = new User;
    list = new List;
    mainView = new MainView({
      model: user
    });
    router = new Backbone.Router({
      routes: {
        '': 'items',
        'items/:id': 'item',
        'login': 'login'
      }
    });
    $.ajaxSetup({
      statusCode: {
        401: (function(_this) {
          return function() {
            user.set({
              logged: false
            });
            return window.location.replace('/#login');
          };
        })(this)
      }
    });
    router.on('route:items', function() {
      return mainView.setContent(new ListView({
        collection: list
      }));
    });
    router.on('route:item', function(id) {
      return mainView.setContent(new EditView({
        model: new Item({
          id: id
        })
      }));
    });
    router.on('route:login', function() {
      return mainView.setContent(new LoginView({
        model: user
      }));
    });
    return Backbone.history.start();
  });

}).call(this);
